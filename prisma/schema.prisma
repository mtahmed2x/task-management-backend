// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  tasksCreated Task[]   @relation("creator")
  tasksEdited  Task[]   @relation("editor")
  tasksLocked  Task[]   @relation("taskLock")
  refreshTokens RefreshToken[]
}

model Task {
  id             String    @id @default(cuid())
  title          String
  body           String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  createdById    String
  createdBy      User      @relation("creator", fields: [createdById], references: [id])
  lastEditedById String?
  lastEditedBy   User?     @relation("editor", fields: [lastEditedById], references: [id])
  lockedById     String?
  lockedBy       User?     @relation("taskLock", fields: [lockedById], references: [id])
  lockedAt       DateTime?
}

model RefreshToken {
  id         String   @id @default(cuid())
  tokenHash  String
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  revoked    Boolean  @default(false)
  expiresAt  DateTime
  replacedBy String?
}
